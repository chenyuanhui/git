git init
git clone /path/to/repository
git clone username@host:/path/to/repository

working dir ---add--->index(stage)---commit--->HEAD

git add <filename>
git add *
git commit -m "message to commit" 
git remote add origin <server>
git push origin master/branch
git checkout -b feature_x
git checkout master
git branch -d feature_x
git push origin <branch>
git pull
git merge <branch>
git diff <source_branch> <target_branch>
git tag 1.0.0 1b2e1d63ff
git log
git checkout --filename
git fetch origin 
git reset --hard oringn/master
gitk
git config color.ui true
git config format.pretty oneline
git add -i
 
 The most commonly used git commands are:
   init       Create an empty Git repository or reinitialize an existing one
   clone      Clone a repository into a new directory
   status     Show the working tree status
   rm         Remove files from the working tree and from the index
   mv         Move or rename a file, a directory, or a symlink
   add        Add file contents to the index
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   log        Show commit logs
   reflog
   checkout   Checkout a branch or paths to the working tree
   reset      Reset current HEAD to the specified state
   remote
   push       Update remote refs along with associated objects
   pull       Fetch from and integrate with another repository or a local branch
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   merge      Join two or more development histories together 
   rebase     Forward-port local commits to the updated upstream head
   show       Show various types of objects 
   tag        Create, list, delete or verify a tag object signed with GPG
   
	查看当前配置有哪些远程仓库:
	$ git remote [ -v ]

	添加远程仓库:
	git remote add [shortname] [url]

	初始化一个不包含工作目录(.git)的仓库:
	$ git --bare init

	fetch 命令只是将远端的数据拉到本地仓库，并不自动合并到当前工作分支:
	$ git fetch [remote-name]

	将远端分支自动合并到本地仓库中当前分支:
	git pull

	推送数据到远程仓库:
	git push [remote-name] [branch-name]

	查看某个远程仓库的详细信息/本地分支和远程仓库分支的对应关系:
	git remote show [remote-name]

	修改某个远程仓库的简短名称:
	git remote rename origin origin1

	移除远端仓库对应的本地仓库：
	git remote rm origin

